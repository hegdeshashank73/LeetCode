# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def averageOfLevels(self, root: Optional[TreeNode]) -> List[float]:
        arr=[]
        mem={}
        def bfs(root,level):
            nonlocal arr
            if(root==None):
                return
            if(level>=len(arr)):
                arr.append(root.val)
            else:
                arr[level]+=root.val
            if(level not in mem):
                mem[level]=1
            else:
                mem[level]+=1
            bfs(root.left,level+1)
            bfs(root.right,level+1)
        
        bfs(root,0)
        for i in range(len(arr)):
            arr[i]/=mem[i]
        return arr
