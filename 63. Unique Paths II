class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        m=len(obstacleGrid) #no of rows
        n=len(obstacleGrid[0]) #no of columns
        if(obstacleGrid[m-1][n-1]==1):
            return 0
        for i in range(m-1,-1,-1):
            for j in range(n-1,-1,-1):
                if(obstacleGrid[i][j]==1):
                    obstacleGrid[i][j]=0
                elif(i==(m-1) and j==(n-1)):
                    obstacleGrid[i][j]=1
                elif(i==m-1):
                    obstacleGrid[i][j]=obstacleGrid[i][j+1]
                elif(j==n-1):
                    obstacleGrid[i][j]=obstacleGrid[i+1][j]
                else:
                    obstacleGrid[i][j]=  obstacleGrid[i+1][j]+ obstacleGrid[i][j+1]
        return obstacleGrid[0][0]
