# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        cur=head
        length=0
        while(cur!=None):
            length+=1
            cur=cur.next
        #print(length)
        if(length==0 or k==length or k==0 or length==1):
            return head
        k=k%length
        if(k==0):
            return head
        dummy=ListNode(0,head)
        prev,cur=dummy,head
        for i in range(1,k):
            cur=cur.next
        while(cur.next!=None):
            prev=prev.next
            cur=cur.next
        cur.next=dummy.next
        dummy.next=prev.next
        prev.next=None
        return dummy.next
